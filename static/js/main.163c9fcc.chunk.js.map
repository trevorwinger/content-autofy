{"version":3,"sources":["Components/input.js","Components/subCheckbox.js","Components/checkBoxParent.js","Components/radioButtonParent.js","Components/checkBoxForm.js","Components/checkBoxFormParent.js","Components/subContent1.js","Components/content.js","App.js","serviceWorker.js","index.js"],"names":["Input","headerText","inputVar","setInputVar","style","margin","textAlign","width","value","onChange","event","target","SubCheckbox","kw","selected","setSelected","useState","checked","setChecked","FormControlLabel","control","Checkbox","includes","id","concat","s","filter","x","inputProps","label","CheckboxParent","listOfKeywords","subTitle","selectedList","selectedListStateFunction","justifyContent","float","map","RadioButtonParent","choice","setChoice","RadioGroup","aria-label","name","Radio","typeOfRoofing","roofService","repairServices","otherServices","CheckBoxForm","setKw","mBrand","setMBrand","display","CheckboxFormParent","kwList","setKwList","toString","subContent1","brand","location","Content","kws","manu","k","App","setBrand","setLocation","manuBrand","setManuBrand","styleCBFP","className","verticalAlign","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.163c9fcc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = ({headerText, inputVar, setInputVar}) => \r\n{\r\n\r\n    const inputStyle = {\r\n        width:\"100%\",\r\n    }\r\n\r\n    const containerStyle = {\r\n        margin:\"20px\",\r\n        textAlign:\"left\"\r\n    }\r\n    \r\n    const setInput = (event) => \r\n    {\r\n        setInputVar(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <div style={containerStyle}>\r\n            <h2>{headerText}</h2>\r\n            <input style={inputStyle} value={inputVar} onChange={setInput} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, {useState} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst SubCheckbox = ({kw, selected, setSelected}) => \r\n{\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const handleChange = (event) => \r\n    {\r\n        setChecked(event.target.checked);\r\n        \r\n        if(selected.includes(event.target.id) === false)\r\n        {\r\n            setSelected(selected.concat(event.target.id));\r\n        }\r\n        else if(event.target.checked === false)\r\n        {\r\n            var s = selected.filter(x => x !== event.target.id);\r\n            setSelected(s);\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <FormControlLabel \r\n            control= {\r\n                <Checkbox \r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    inputProps={{ 'aria-label': 'indeterminate checkbox' }} \r\n                    id={kw}/>\r\n            }\r\n            label={kw}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubCheckbox;","import React from 'react';\r\nimport SubCheckbox from './subCheckbox';\r\n\r\nconst CheckboxParent = ({listOfKeywords, subTitle, selectedList, selectedListStateFunction}) => {\r\n    const styleDiv = {\r\n        width:\"100%\",\r\n        justifyContent:\"center\",\r\n        textAlign:\"left\",\r\n        float:\"center\"\r\n    }\r\n\r\n    const subTitleStyle={\r\n        float:\"center\",\r\n    }\r\n\r\n    const subCbStyle = {\r\n        textAlign:\"left\",\r\n    }\r\n    \r\n    return(\r\n        <div style={styleDiv}>\r\n            <h4 style={subTitleStyle}>{subTitle}</h4>\r\n            <div style={subCbStyle}>\r\n            {\r\n                listOfKeywords.map((kw => \r\n                <SubCheckbox kw={kw} selected={selectedList} setSelected={selectedListStateFunction}/>))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckboxParent;","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst RadioButtonParent = ({choice, setChoice}) => \r\n{\r\n\r\n    const styleDiv = {\r\n        justifyContent:\"center\",\r\n        textAlign:\"left\",\r\n    }\r\n\r\n    const handleChange = (event) => \r\n    {\r\n        setChoice(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div style={styleDiv}>\r\n            <h4>Manufacturer</h4>\r\n            <RadioGroup aria-label=\"manufacturer\" name=\"manufacturer\" value={choice} onChange={handleChange}>\r\n                <FormControlLabel value=\"Owens Corning\" control={<Radio/>} label=\"Owens Corning\"></FormControlLabel>\r\n                <FormControlLabel value=\"General Aniline & Film\" control={<Radio/>} label=\"General Aniline & Film\"></FormControlLabel>\r\n            </RadioGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButtonParent;","import React from 'react';\r\nimport CheckboxParent from './checkBoxParent';\r\nimport RadioButtonFormParent from './radioButtonParent';\r\n\r\n\r\nconst typeOfRoofing = ['Residential Roofing', 'Commercial Roofing', 'Shingle Roofing', 'Tile Roofing', 'Metal Roofing', 'Flat Roofing', 'Slate Roofing', 'Solar Roofing'];\r\nconst roofService = ['Roof Replacement','Roof Repair', 'Roof Cleaning', 'Roof Maintenance', 'Roof Financing', 'Roof Inspection', 'Solar Roof'];\r\nconst repairServices = ['Gutter Repair', 'Storm Damage Repair','Roof Damage Repair'];\r\nconst otherServices = ['Attic Insulation', 'Roof Maxx', 'Gutter Installation', 'Seamless Gutters', 'Skylight Installation', 'Emergency Roofing', 'Leaky Roof'];\r\n\r\nconst CheckBoxForm = ({kw, setKw, mBrand, setMBrand}) => \r\n{\r\n    const styleContainerCheckBoxParent = {\r\n        width:\"100%\",\r\n        display:\"flex\", \r\n        justifyContent:\"spaceBetween\",\r\n        margin:\"0 auto\",   \r\n    }\r\n    \r\n    return (\r\n        <div style={styleContainerCheckBoxParent}>\r\n            <CheckboxParent listOfKeywords={typeOfRoofing} subTitle='Type of Roofing' selectedList={kw} selectedListStateFunction={setKw} />\r\n            <CheckboxParent listOfKeywords={roofService} subTitle='Roof Service(s)' selectedList={kw} selectedListStateFunction={setKw} />\r\n            <CheckboxParent listOfKeywords={otherServices} subTitle='Other Service(s)' selectedList={kw} selectedListStateFunction={setKw} />\r\n            <CheckboxParent listOfKeywords={repairServices} subTitle='Repair Service(s)' selectedList={kw} selectedListStateFunction={setKw} />\r\n            <RadioButtonFormParent choice={mBrand} setChoice={setMBrand} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckBoxForm;","import React from 'react';\r\nimport CheckBoxForm from './checkBoxForm';\r\n\r\nconst CheckboxFormParent = ({kwList, setKwList, mBrand, setMBrand}) => {\r\n    const styleContainer = {\r\n        textAlign:\"center\",\r\n        justifyContent:\"center\",\r\n    }\r\n\r\n    return(\r\n        <div style={styleContainer}>\r\n            <h3>Keywords</h3>\r\n            <p>{kwList.toString()}</p>\r\n            <p>{mBrand}</p>\r\n            <CheckBoxForm  kw={kwList} setKw={setKwList} mBrand={mBrand} setMBrand={setMBrand}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckboxFormParent;","import React from 'react';\r\n\r\nconst subContent1 = ({brand, location, kw}) => {\r\n    return(\r\n        <div>\r\n            <h2>{kw}</h2>\r\n            <p>\r\n            When your {location} home needs {kw}, {brand} is here to help. We handle all of your {kw} needs and more. We know how important your home is to you and your family, which is why we pride ourselves on providing you with the best services possible.\r\n            No matter if you’re looking to have repairs done on your home, or you’re just looking to update it, {brand} has your back. </p>\r\n            <h3>Why Would You Want To Repair Or Update Your {location} Home?</h3>\r\n            <p>\r\n            When you repair or update your home, you’re doing a number of things to ensure it stays healthy. Plus, you get a few benefits for you {location} home when you do these things, such as:\r\n                Won’t want to move out of your home.\r\n                Customize your home to fit your lifestyle.\r\n                Better energy efficiency.\r\n                Give your home a general facelift.\r\n                Add value to your home.\r\n\r\n                If you’re in need of any of {brand}’s services, {kw}, and getting your {location} home in the best condition possible, contact us today! We’ll help you get your home on back on track to protect you and your family.\r\n                </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default subContent1;","import React from 'react';\r\nimport SubContent1 from './subContent1';\r\nconst Content = ({brand, location, kws, manu, }) => {\r\n    const content = []\r\n    return(\r\n        <div>\r\n            {\r\n                kws.map(k => \r\n                    <SubContent1 kw={k} location={location} brand={brand}/>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Input from './Components/input';\r\nimport CheckboxFormParent from './Components/checkBoxFormParent';\r\nimport Content from './Components/content';\r\n\r\nfunction App() {\r\n  const [kw, setKw] = useState([]);\r\n  const [brand, setBrand] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [manuBrand, setManuBrand] = useState('');\r\n\r\n  const styleContainer = {\r\n    display: \"flex\",\r\n    textAlign:\"center\",\r\n    justifyContent:\"center\",\r\n    width:\"100%\",\r\n    verticalAlign:\"middle\",\r\n  }\r\n\r\n  const styleCBFP = \r\n  {\r\n    justifyContent:\"center\",\r\n    textAlign:\"center\",\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={styleContainer}>\r\n          <Input headerText={'Brand Name'} inputVar={brand} setInputVar={setBrand}/>\r\n          <Input headerText={'Brand Location'} inputVar={location} setInputVar={setLocation} />\r\n        </div>\r\n        <div style={styleCBFP}>\r\n          <CheckboxFormParent style={styleCBFP} kwList={kw} setKwList={setKw} mBrand={manuBrand} setMBrand={setManuBrand}/>\r\n        </div>\r\n        <div>\r\n          <Content brand={brand} location={location} kws={kw} manu={manuBrand} />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}